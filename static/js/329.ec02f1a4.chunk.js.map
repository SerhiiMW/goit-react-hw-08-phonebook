{"version":3,"file":"static/js/329.ec02f1a4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MyPhone/MyPhoneForm/my-phoneForm.module.css?8d0b","components/MyPhone/MyPhoneForm/MyPhoneForm.jsx","webpack://react-homework-template/./src/components/MyPhone/MyPhoneList/my-phoneList.module.css?2b42","components/MyPhone/MyPhoneList/MyPhoneList.jsx","redux/contacts/contacts-selector.js","api/contacts-api.js","webpack://react-homework-template/./src/components/MyPhone/my-phone.module.css?aab5","components/MyPhone/MyPhone.jsx","redux/contacts/contacts-operations.js","webpack://react-homework-template/./src/pages/ContactsPage/contacts-page.module.css?5fb6","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formPhone\":\"my-phoneForm_formPhone__H5KfX\",\"phoneLabel\":\"my-phoneForm_phoneLabel__yWIHr\",\"phoneInput\":\"my-phoneForm_phoneInput__2L0sW\",\"btnSubmit\":\"my-phoneForm_btnSubmit__KoASO\",\"formGroup\":\"my-phoneForm_formGroup__D-5sK\"};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./my-phoneForm.module.css\";\n\nconst INITIAL_STATE = {\n    name: \"\",\n    number: \"\",\n};\n\nconst MyPhoneForm = ({onSubmit}) => {\n    const [state, setState] = useState({...INITIAL_STATE});\n\n\n    const handleChange = ({target}) => {\n        const {name, value} = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    \n    const handleSubmit = (e)=> {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    }\n    const reset = () => {\n        setState({...INITIAL_STATE});\n    }\n    const nameId = nanoid();\n    const numberId = nanoid();\n    const {name, number} = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.formPhone}>\n            <div className={styles.formGroup}>  \n                <label className={styles.phoneLabel} htmlFor={nameId}>Name</label>\n                <input className={styles.phoneInput} value={name} type=\"text\" name=\"name\" required onChange={handleChange} id={nameId} placeholder=\"\" />\n            </div>\n            <div className={styles.formGroup}>\n                <label className={styles.phoneLabel} htmlFor={numberId}>Number</label>\n                <input className={styles.phoneInput} value={number} type=\"tel\" name=\"number\" required onChange={handleChange} id={numberId} placeholder=\"\" />\n            </div>\n            <button className={styles.btnSubmit} type=\"submit\">Add contact</button>\n        </form>\n    )\n}\n\n\nexport default MyPhoneForm;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"my-phoneList_btn__SiAYC\"};","import styles from \"./my-phoneList.module.css\";\n\nconst MyPhoneList = ({ items, deleteContact }) => {\n    const elements = items.map(({id, name, number})=> \n        <li className={styles.phoneList} key={id}>{name}: {number} <button className={styles.btn} onClick={()=> deleteContact(id)} type=\"button\">Delete</button></li>)\n    \n        return (\n            <ol className={styles.list}>\n                {elements}\n            </ol>\n    )\n}\n\nexport default MyPhoneList;","export const selectFilteredContacts = store => {\n    const {contacts, filter} = store;\n    const {items, isLoading, error } = contacts;\n    if (!filter) {\n        return contacts;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n\n    const filteredContacts = items.filter(({ name }) => {\n        const normalizedName = name.toLowerCase();\n\n        return normalizedName.includes(normalizedFilter)\n    });\n\n    return {\n        items: filteredContacts,\n        isLoading,\n        error,\n    }\n}","import instance from \"./auth-api\";\n\n\nexport const requestFetchContacts= async ()=> {\n    const {data} = await instance.get(\"/contacts\");\n    return data;\n}\n\nexport const requestAddContacts = async (body) =>{\n    const {data} = await instance.post(\"/contacts\", body);\n    return data;\n}\nexport const requestDeleteContacts = async (id) => {\n    const {data} = await instance.delete(`/contacts/${id}`);\n    return data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-phone_wrapper__zB9hp\",\"filter\":\"my-phone_filter__-p+HS\",\"listWrapper\":\"my-phone_listWrapper__hIK-1\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport MyPhoneForm from './MyPhoneForm/MyPhoneForm';\nimport MyPhoneList from './MyPhoneList/MyPhoneList';\n\nimport { setFilter } from \"../../redux/filter/filter-slice\";\nimport { selectFilteredContacts } from \"../../redux/contacts/contacts-selector\";\nimport { fetchContacts, addContacts, deleteContacts } from \"../../redux/contacts/contacts-operations\";\n\nimport styles from './my-phone.module.css';\n\nconst MyPhone = () => {\n    const {items, isLoading, error} = useSelector(selectFilteredContacts);\n \n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const isDublicate = ({ name }) => {\n        const normalizedName = name.toLowerCase();\n\n        const dublicate = items.find(item => {\n            const normalizedCurrentName = item.name.toLowerCase();\n            return (normalizedCurrentName === normalizedName);\n        })\n\n        return Boolean(dublicate);\n    }\n\n    const onAddContact= (data) => {\n        if (isDublicate(data)) {\n            return alert(`${data.name} is already in contacts`);\n        }\n\n        dispatch(addContacts(data));\n    }\n\n    const onDeleteContact = (id) => {\n        dispatch(deleteContacts(id));\n    }\n\n    const changeFitler = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <div className={styles.wrapper}>\n        <h1>Phonebook</h1>\n        <MyPhoneForm className={styles.phoneForm} onSubmit={onAddContact} />\n        <div className={styles.listWrapper}>\n            <h1>Contacts</h1>\n            <p>Find contacts by name</p>\n            <input className={styles.filter} onChange={changeFitler} name=\"filter\" placeholder=\"\" />\n            {isLoading && <p>...Loading</p>}\n            {error && <p>{error}</p>}\n            {Boolean(items.length) && <MyPhoneList items={items} deleteContact={onDeleteContact} />}\n        </div>\n    </div>\n)\n};\n\nexport default MyPhone;\n","import * as contactsApi from \"../../api/contacts-api\";\n\nimport { fetchContactsLoading, fetchContactsSuccess, fetchContactsError, addContactsLoading, addContactsSuccess, addContactsError, deleteContactsLoading, deleteContactsSuccess, deleteContactsError} from \"./contacts-slice\";\n\nexport const fetchContacts = () => {\n    const func = async (dispatch) => {\n        try {\n            dispatch(fetchContactsLoading());\n            const data = await contactsApi.requestFetchContacts();\n            dispatch(fetchContactsSuccess(data));\n        }\n        catch (error) {\n            dispatch(fetchContactsError(error.message));\n        }\n    }\n\n    return func;\n}\n\nexport const addContacts = (body)=> {\n    const func = async (dispatch)=> {\n        try {\n            dispatch(addContactsLoading());\n            const data = await contactsApi.requestAddContacts(body);\n            dispatch(addContactsSuccess(data));\n        }\n        catch(error) {\n            dispatch(addContactsError(error.message));\n        }\n    }\n\n    return func;\n}\n\nexport const deleteContacts = id => {\n    const func = async (dispatch) => {\n        try {\n            dispatch(deleteContactsLoading());\n            await contactsApi.requestDeleteContacts(id);\n            dispatch(deleteContactsSuccess(id))\n        }\n        catch(error){\n            dispatch(deleteContactsError(error.message));\n        }\n    }\n\n    return func;\n}","// extracted by mini-css-extract-plugin\nexport default {\"ContactsPageWrapper\":\"contacts-page_ContactsPageWrapper__zbrDh\"};","import MyPhone from \"components/MyPhone/MyPhone\";\nimport styles from './contacts-page.module.css'\n\nconst ContactsPage = ()=> {\n    return (\n        <div className={styles.ContactsPageWrapper}>\n            <MyPhone />\n        </div>\n    )\n}\n\nexport default ContactsPage;"],"names":["INITIAL_STATE","name","number","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","_defineProperty","reset","nameId","nanoid","numberId","_jsxs","e","preventDefault","className","styles","children","_jsx","htmlFor","type","required","onChange","id","placeholder","items","deleteContact","elements","map","onClick","selectFilteredContacts","store","contacts","filter","isLoading","error","normalizedFilter","toLowerCase","includes","requestFetchContacts","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","instance","sent","abrupt","stop","apply","arguments","requestAddContacts","_callee2","body","_yield$instance$post","_context2","_x","requestDeleteContacts","_ref3","_callee3","_yield$instance$delet","_context3","concat","_x2","_useSelector","useSelector","dispatch","useDispatch","useEffect","func","fetchContactsLoading","contactsApi","fetchContactsSuccess","t0","fetchContactsError","message","fetchContacts","MyPhoneForm","normalizedName","dublicate","find","item","Boolean","isDublicate","alert","addContactsLoading","addContactsSuccess","addContactsError","addContacts","setFilter","length","MyPhoneList","deleteContactsLoading","deleteContactsSuccess","deleteContactsError","_x3","deleteContacts","MyPhone"],"sourceRoot":""}